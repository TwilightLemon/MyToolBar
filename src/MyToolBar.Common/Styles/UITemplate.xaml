<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite">

    <Style x:Key="SimpleVerticalScrollViewerStyle" TargetType="{x:Type ws:ScrollViewer}">
        <Setter Property="ws:StylusTouchDevice.Simulate" Value="True"/>
        <Setter Property="PanningMode" Value="VerticalOnly"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Hidden"/>
    </Style>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RoundToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource ForeColor}"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template"
                Value="{DynamicResource RoundToggleButtonTemplate}"/>
    </Style>
    <ControlTemplate x:Key="RoundToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="OnChecked">
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                  Storyboard.TargetName="ellipse">
                    <EasingThicknessKeyFrame KeyTime="0:0:0.3"
                                             Value="26,0,0,0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut" />
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnUnchecked">
                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                  Storyboard.TargetName="ellipse">
                    <EasingThicknessKeyFrame KeyTime="0:0:0.3"
                                             Value="6,0,0,0">
                        <EasingThicknessKeyFrame.EasingFunction>
                            <CircleEase EasingMode="EaseOut" />
                        </EasingThicknessKeyFrame.EasingFunction>
                    </EasingThicknessKeyFrame>
                </ThicknessAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid Background="Transparent">
            <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              HorizontalAlignment="Left"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="Center" />
            <Border x:Name="border"
                    Background="Transparent"
                    CornerRadius="12"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource FocusMaskColor}"
                    Width="48"
                    Margin="0 0 20 0"
                    Height="24"
                    HorizontalAlignment="Right">
                <Ellipse Name="ellipse"
                         Width="16"
                         Height="16"
                         Fill="{DynamicResource ForeColor}"
                         HorizontalAlignment="Left"
                         Opacity="0.8"
                         Margin="4 0 0 0">
                </Ellipse>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <EventTrigger  RoutedEvent="ToggleButton.Checked">
                <BeginStoryboard Storyboard="{StaticResource OnChecked}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                <BeginStoryboard Storyboard="{StaticResource OnUnchecked}" />
            </EventTrigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter TargetName="border"
                        Property="Background"
                        Value="{DynamicResource SystemThemeColor}" />
                <Setter TargetName="border"
                        Property="BorderThickness"
                        Value="0" />
                <Setter TargetName="ellipse"
                        Property="Fill"
                        Value="{DynamicResource BackgroundColor}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="SimpleCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="{DynamicResource MaskColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForeColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource FocusMaskColor}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder" Height="16" Width="16" CornerRadius="2"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark" VerticalAlignment="Center" HorizontalAlignment="Center" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{DynamicResource ForeColor}" Margin="1" Opacity="0" Stretch="None"/>
                                <Rectangle x:Name="indeterminateMark" Fill="{DynamicResource ForeColor}" Margin="2" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource FocusMaskColor}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource ForeColor}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource ForeColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{DynamicResource FocusMaskColor}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource ForeColor}"/>
                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{DynamicResource ForeColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource MaskColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForeColor}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ForeColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" SnapsToDevicePixels="True" CornerRadius="10,10,10,10" Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="8 0 0 0" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SimpleTextBoxStyleForWs" TargetType="{x:Type ws:TextBox}">
        <Setter Property="Background" Value="{DynamicResource MaskColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForeColor}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ForeColor}"/>
        <Setter Property="SelectionBrush"
                Value="{DynamicResource SystemThemeColor}" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="10"/>
    </Style>
    <Style x:Key="SimplePasswordBoxStyleForWs" TargetType="{x:Type ws:PasswordBox}">
        <Setter Property="Background" Value="{DynamicResource MaskColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForeColor}"/>
        <Setter Property="CaretBrush" Value="{DynamicResource ForeColor}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="10"/>
    </Style>
    <Style x:Key="SimpleListBoxItemStyle" TargetType="ws:ListBoxItem">
        <Setter Property="Margin" Value="5 2"/>
        <Setter Property="CornerRadius" Value="15"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource ForeColor}"/>
        <Setter Property="HoverBackground" Value="{DynamicResource MaskColor}"/>
        <Setter Property="SelectedBackground" Value="{DynamicResource MaskColor}"/>
        <Setter Property="SelectedActiveBackground" Value="{DynamicResource MaskColor}"/>
    </Style>
    <Style x:Key="SimpleButtonStyleForWs" TargetType="ws:Button">
        <Setter Property="Foreground" Value="{DynamicResource ForeColor}"/>
        <Setter Property="Background" Value="{DynamicResource MaskColor}"/>
        <Setter Property="HoverBackground" Value="{DynamicResource FocusMaskColor}"/>
        <Setter Property="PressedBackground" Value="{DynamicResource FocusMaskColor}"/>
        <Setter Property="CornerRadius" Value="14"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>
    <Style x:Key="SimpleComboBoxStyleForWs" TargetType="ws:ComboBox">
        <Setter Property="Background" Value="{DynamicResource MaskColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource FocusMaskColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForeColor}"/>
        <Setter Property="GlyphBrush" Value="{DynamicResource ForeColor}"/>
        <Setter Property="PopupBackground" Value="{DynamicResource BackgroundColor}"/>
        <Setter Property="CornerRadius" Value="4,4,4,4"/>
        <Setter Property="PopupCornerRadius" Value="4,4,4,4"/>
        <Setter Property="HoverBackground" Value="{DynamicResource FocusMaskColor}"/>
        <Setter Property="HoverBorderBrush" Value="{DynamicResource FocusMaskColor}"/>
        <Setter Property="HoverGlyphBrush" Value="{DynamicResource ForeColor}"/>
        <Setter Property="HoverForeground" Value="{DynamicResource ForeColor}"/>
        <Setter Property="PressedBackground" Value="{DynamicResource FocusMaskColor}"/>
        <Setter Property="PressedBorderBrush" Value="{DynamicResource FocusMaskColor}"/>
        <Setter Property="PressedGlyphBrush" Value="{DynamicResource ForeColor}"/>
        <Setter Property="PressedForeground" Value="{DynamicResource ForeColor}"/>
    </Style>

    <FontFamily x:Key="SegoeFluentIcon">
        pack://application:,,,/MyToolBar.Common;component/Resources/Segoe Fluent Icons.ttf#Segoe Fluent Icons
    </FontFamily>
    <Style x:Key="FluentWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="Background"
                Value="{DynamicResource WindowBackgroundColor}" />
        <Setter  Property="Foreground"
                 Value="{DynamicResource ForeColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter />
                        <Grid VerticalAlignment="Top"
                              Height="48">
                            <ws:Button    Name="CloseBtn"
                                          Width="48"
                                          Height="48"
                                          Content="&#xE8BB;"
                                          FontFamily="{StaticResource SegoeFluentIcon}"
                                          FontSize="10"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top"
                                          BorderThickness="0"
                                          Cursor="Hand"
                                          WindowChrome.IsHitTestVisibleInChrome="True"
                                          Background="Transparent"
                                          Foreground="{DynamicResource ForeColor}"
                                          HoverBackground="#FFE32820"
                                          PressedBackground="#FFEF1E15">
                            </ws:Button>
                            <ws:Button Name="MaxmizeBtn"
                                       Width="48"
                                       Height="48"
                                       Margin="0 0 48 0"
                                       FontFamily="{StaticResource SegoeFluentIcon}"
                                       FontSize="10"
                                       Cursor="Hand"
                                       WindowChrome.IsHitTestVisibleInChrome="True"
                                       ws:WindowOption.IsMaximumButton="True"
                                       Background="Transparent"
                                       Foreground="{DynamicResource ForeColor}"
                                       HoverBackground="{DynamicResource MaskColor}"
                                       PressedBackground="{DynamicResource FocusMaskColor}"
                                       DisabledForeground="{DynamicResource FocusMaskColor}"
                                       DisabledBackground="Transparent"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Top"
                                       BorderThickness="0">
                                <ws:ConditionalControl Condition="{Binding WindowState,Converter={x:Static ws:NotEqualConverter.Instance},ConverterParameter={x:Static WindowState.Maximized}}">
                                    <ws:ConditionalControl.ContentWhenTrue>
                                        <TextBlock Text="&#xE922;" />
                                    </ws:ConditionalControl.ContentWhenTrue>
                                    <ws:ConditionalControl.ContentWhenFalse>
                                        <TextBlock Text="&#xE923;" />
                                    </ws:ConditionalControl.ContentWhenFalse>
                                </ws:ConditionalControl>
                            </ws:Button>
                            <ws:Button Name="MinimizeBtn"
                                       Width="48"
                                       Height="48"
                                       Margin="0 0 96 0"
                                       Content="&#xE921;"
                                       FontFamily="{StaticResource SegoeFluentIcon}"
                                       FontSize="10"
                                       Background="Transparent"
                                       Cursor="Hand"
                                       Foreground="{DynamicResource ForeColor}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Top"
                                       BorderThickness="0"
                                       WindowChrome.IsHitTestVisibleInChrome="True"
                                       HoverBackground="{DynamicResource MaskColor}"
                                       PressedBackground="{DynamicResource FocusMaskColor}">
                            </ws:Button>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>